// <auto-generated />
using System;
using CollegeManagement.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CollegeManagement.Migrations
{
    [DbContext(typeof(COLLEGE_MANAGEMENT_DBContext))]
    [Migration("20220219022504_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CollegeManagement.Course", b =>
                {
                    b.Property<int>("IdCourse")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_COURSE");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCourse"), 1L, 1);

                    b.Property<string>("DsCourse")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("DS_COURSE");

                    b.HasKey("IdCourse");

                    b.ToTable("COURSES");
                });

            modelBuilder.Entity("CollegeManagement.Student", b =>
                {
                    b.Property<int>("IdStudentRegistrationNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_STUDENT_REGISTRATION_NUMBER");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdStudentRegistrationNumber"), 1L, 1);

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("date")
                        .HasColumnName("BIRTHDAY");

                    b.Property<int>("IdCourse")
                        .HasColumnType("int")
                        .HasColumnName("ID_COURSE");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("NAME");

                    b.HasKey("IdStudentRegistrationNumber");

                    b.HasIndex("IdCourse");

                    b.ToTable("STUDENTS");
                });

            modelBuilder.Entity("CollegeManagement.StudentGrade", b =>
                {
                    b.Property<decimal>("Grade")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("GRADE");

                    b.Property<int>("IdStudentRegistrationNumber")
                        .HasColumnType("int")
                        .HasColumnName("ID__STUDENT_REGISTRATION_NUMBER");

                    b.Property<int>("IdSubject")
                        .HasColumnType("int")
                        .HasColumnName("ID_SUBJECT");

                    b.HasIndex("IdStudentRegistrationNumber");

                    b.HasIndex("IdSubject");

                    b.ToTable("STUDENT_GRADES");
                });

            modelBuilder.Entity("CollegeManagement.Subject", b =>
                {
                    b.Property<int>("IdSubject")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_SUBJECT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSubject"), 1L, 1);

                    b.Property<string>("DsSubject")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("DS_SUBJECT");

                    b.Property<int>("IdCourse")
                        .HasColumnType("int")
                        .HasColumnName("ID_COURSE");

                    b.Property<int>("IdTeacher")
                        .HasColumnType("int")
                        .HasColumnName("ID_TEACHER");

                    b.HasKey("IdSubject");

                    b.HasIndex("IdCourse");

                    b.HasIndex("IdTeacher");

                    b.ToTable("SUBJECTS");
                });

            modelBuilder.Entity("CollegeManagement.Teacher", b =>
                {
                    b.Property<int>("IdTeacher")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_TEACHER");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTeacher"), 1L, 1);

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("date")
                        .HasColumnName("BIRTHDAY");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("NAME");

                    b.Property<decimal>("Salary")
                        .HasColumnType("money")
                        .HasColumnName("SALARY");

                    b.HasKey("IdTeacher");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("CollegeManagement.Student", b =>
                {
                    b.HasOne("CollegeManagement.Course", "IdCourseNavigation")
                        .WithMany("Students")
                        .HasForeignKey("IdCourse")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdCourseNavigation");
                });

            modelBuilder.Entity("CollegeManagement.StudentGrade", b =>
                {
                    b.HasOne("CollegeManagement.Student", "IdStudentRegistrationNumberNavigation")
                        .WithMany()
                        .HasForeignKey("IdStudentRegistrationNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CollegeManagement.Subject", "IdSubjectNavigation")
                        .WithMany()
                        .HasForeignKey("IdSubject")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdStudentRegistrationNumberNavigation");

                    b.Navigation("IdSubjectNavigation");
                });

            modelBuilder.Entity("CollegeManagement.Subject", b =>
                {
                    b.HasOne("CollegeManagement.Course", "IdCourseNavigation")
                        .WithMany("Subjects")
                        .HasForeignKey("IdCourse")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CollegeManagement.Teacher", "IdTeacherNavigation")
                        .WithMany("Subjects")
                        .HasForeignKey("IdTeacher")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdCourseNavigation");

                    b.Navigation("IdTeacherNavigation");
                });

            modelBuilder.Entity("CollegeManagement.Course", b =>
                {
                    b.Navigation("Students");

                    b.Navigation("Subjects");
                });

            modelBuilder.Entity("CollegeManagement.Teacher", b =>
                {
                    b.Navigation("Subjects");
                });
#pragma warning restore 612, 618
        }
    }
}
